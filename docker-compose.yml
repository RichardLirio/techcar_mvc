
services:
 app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: techcar-api
    ports:
      - '3333:3333'
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DB=${PG_DB}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - ADMIN_USER_EMAIL=${ADMIN_USER_EMAIL}
      - ADMIN_USER_PASSWORD=${ADMIN_USER_PASSWORD}
      - RUN_PRISMA_COMMANDS=true
    volumes:
      # Volume para desenvolvimento com hot reload
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres
    networks:
      - techcar-api-network
    restart: unless-stopped

 postgres:
  container_name: techcar-api-pg
  image: postgres
  ports:
    - 5432:5432
  environment:
    POSTGRES_USER: ${PG_USER}
    POSTGRES_PASSWORD: ${PG_PASSWORD}
    POSTGRES_DB: ${PG_DB}
    PGDATA: /data/postgres
  volumes:
    - ./data/pg:/data/postgres
  networks: 
    - techcar-api-network
  restart: unless-stopped
  healthcheck:
    test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB}"]
    interval: 10s
    timeout: 5s
    retries: 5

networks:
  techcar-api-network:
    driver: bridge