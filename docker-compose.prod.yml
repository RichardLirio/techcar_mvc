
services:
  postgres:
    container_name: techcar-api-pg
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
      PGDATA: /data/postgres
    volumes:
      - postgres_data:/data/postgres
    networks: 
      - techcar-api-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: techcar-api
    ports:
      - "3333:3333"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3333}
      - APP_VERSION=${APP_VERSION}
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DB=${PG_DB}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - ADMIN_USER_EMAIL=${ADMIN_USER_EMAIL}
      - ADMIN_USER_PASSWORD=${ADMIN_USER_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - techcar-api-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

volumes:
  postgres_data:

networks:
  techcar-api-network:
    driver: bridge